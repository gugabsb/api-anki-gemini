---
layout: "layouts/base.njk"
pagination:
  data: decks.items
  size: 1
  alias: deckid
  resolve: values
  filter:
    - item
permalink: "/comprar/{{ deckid.sys.id }}/"
---


{# Filtro para encontrar o deck pelo ID #}
{% set currentDeck = deckid %}

{% if currentDeck %}
<div class="deck-container">
    <h1>{{ currentDeck.fields.title }}</h1>
    
    {# Imagem (com fallback) #}
    {% if currentDeck.fields.image %}
      <img src="{{ currentDeck.fields.image.fields.file.url }}" 
           alt="{{ currentDeck.fields.title }}"
           class="deck-image">
    {% endif %}
    
    <p>{{ currentDeck.fields.description }}</p>
    <p>PreÃ§o: R$ {{ currentDeck.fields.price }}</p>
    
    <button id="buy-button">
      Comprar com PIX
    </button>
</div>
<div id="qrcodepix" class="qrcodepix">

</div>
<script>
(async function() {
  const supabase = window.supabaseClient.init();
  const { data: { user }, error } = await supabase.auth.getUser();
  if (!user || error) {
    const returnTo = encodeURIComponent(window.location.pathname);
    window.location.href = `/auth/login/?redirect=${returnTo}`;
    return;
  }

  const user_id = user.id;
  const user_email = user.email;
  const deck_id = '{{ currentDeck.sys.id }}';
  const deck_price = '{{ currentDeck.fields.price }}';
  const deck_name = '{{ currentDeck.fields.title }}';

  document.getElementById('buy-button').addEventListener('click', async () => {
    try {
      const res = await fetch('/.netlify/functions/create-pix-payment-mp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ deck_id, deck_price, deck_name, user_id, user_email })
      });

      const text = await res.text();
      const data = JSON.parse(text);

      const img = document.createElement('img');
      img.src = `data:image/png;base64,${data.qr_code_base64}`;
      document.getElementById('qrcodepix').appendChild(img);
      alert('Escaneie o QR Code para pagar com PIX!');
    } catch (err) {
      console.error('Erro ao criar pagamento:', err);
      alert('Erro ao gerar QR Code de pagamento.');
    }
  });

  setInterval(async () => {
    try {
      const { data: result } = await supabase
        .from('user_decks')
        .select('deck_id')
        .eq('user_id', user_id)
        .eq('deck_id', deck_id);

      if (result && result.length > 0) {
        alert('âœ… Pagamento confirmado! Deck liberado ðŸŽ‰');
        window.location.href = '/dashboard';
      }
    } catch (e) {
      console.error('Erro no polling do pagamento:', e);
    }
  }, 5000);
})();
</script>

<style>
    .qrcodepix img{
        width: 200px;
        height: 200px;
    }
    .qrcodepix {
        text-align: center;
    }
</style>

{% else %}
  <div class="error">
    <p>Deck nÃ£o encontrado</p>
    <a href="/">Voltar</a>
  </div>
{% endif %}