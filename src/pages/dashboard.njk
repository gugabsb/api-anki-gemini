---
layout: layouts/base.njk
title: "Área do Aluno"
---

<div id="verify-alert" style="display: none; background: #ffeb3b; padding: 1rem; margin: 1rem 0;">
  Por favor, verifique seu email para ativar sua conta.
  <button onclick="resendVerification()">Reenviar email</button>
</div>


<div class="dashboard-container">
  <h1>Bem-vindo à área do aluno</h1>
  <button id="logout-btn" class="btn-logout">Sair</button>
  <div id="user-data">
    <!-- Dados serão carregados via JS -->
  </div>  

  <h2>Decks adquiridos:</h2>

  <div id="decks-list" class="decks-grid">
    <!-- Decks serão carregados aqui -->
  </div>


</div>

<script>
  async function resendVerification() {
  const supabase = window.supabaseClient.init();
  const { error } = await supabase.auth.resend({
    type: 'signup',
    email: (await supabase.auth.getUser()).data.user.email
  });
  
  if (error) {
    alert('Erro ao reenviar: ' + error.message);
  } else {
    alert('Email de verificação reenviado!');
  }
}


  // Função de download melhorada
  async function downloadDeck(deckId) {
    try {
      const supabase = window.supabaseClient.init();
      const { data: { session }, error } = await supabase.auth.getSession();
      
      if (error || !session) throw new Error('Sessão inválida');

      const response = await fetch(`/.netlify/functions/download/${deckId}`, {
        headers: {
          'Authorization': `Bearer ${session.access_token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok && response.redirected) {
        window.location.href = response.url;
      } else {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Falha no download');
      }
    } catch (error) {
      console.error('Erro no download:', error);
      alert(error.message);
    }
  }

  // Inicialização da página
(async function() {
  try {
    const supabase = window.supabaseClient.init();
    const { data: { user }, error: authError } = await supabase.auth.getUser();
    if (authError || !user) {
      console.error('Erro de autenticação:', authError);
      window.location.href = `/auth/login?error=${encodeURIComponent(authError?.message || 'Não autenticado')}`;
      return;
    }

    // Verificação de email (se necessário)
    if (!user.email_confirmed_at) {
      document.getElementById('verify-alert').style.display = 'block';
    }

      if (authError || !user) throw new Error('Não autenticado');

      // Exibe dados do usuário
      document.getElementById('user-data').innerHTML = `
        <p>Logado como: <strong>${user.email}</strong></p>
        ${user.user_metadata?.avatar_url ? 
          `<img src="${user.user_metadata.avatar_url}" alt="Avatar" class="avatar">` : ''}
      `;

     // Carrega decks do usuário
    const { data: decks, error: decksError } = await supabase
      .from('user_decks')
      .select('deck_id, decks(title, description, file_path, image_path), purchased_at')
      .eq('user_id', user.id)
      .order('purchased_at', { ascending: false });

    if (decksError) throw decksError;

    const decksContainer = document.getElementById('decks-list');
    decksContainer.innerHTML = decks.length > 0 
      ? decks.map(deck => `
          <div class="deck-card-dash">
            <img src="https://plupzqjkynaprsluelwt.supabase.co/storage/v1/object/public/images/${deck.decks?.image_path}" 
                alt="${deck.decks?.title}"
                class="image">
            <h3>${deck.decks?.title || 'Deck sem nome'}</h3>
            <button 
              onclick="downloadDeck('${deck.deck_id}')" 
              class="btn-download"
              data-id="${deck.deck_id}"
            >
              Baixar
            </button>
          </div>
        `).join('')
      : '<p>Nenhum deck disponível ainda.</p>';


      // Logout
      document.getElementById('logout-btn').addEventListener('click', async () => {
        await supabase.auth.signOut();
        window.location.href = '/auth/login';
      });

  } catch (error) { // Agora a variável error está definida corretamente
    console.error('Erro no dashboard:', error);
    window.location.href = `/auth/login?error=${encodeURIComponent(error.message)}`;
  }
})();
</script>